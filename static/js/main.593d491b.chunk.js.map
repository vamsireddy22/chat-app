{"version":3,"sources":["components/MessageForm.jsx","components/TheirMessage.jsx","components/MyMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","TheirMessage","lastMessage","message","isFirstMessageByUser","sender","username","backgroundImage","avatar","attachments","src","file","alt","marginLeft","float","backgroundColor","MyMessage","marginRight","color","chatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppFeed","ChatFeed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.593d491b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\n\r\nconst MessageForm = (props) =>{\r\n\r\n    const [value,setValue] = useState('');\r\n    const {chatId, creds} = props;\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        const text = value.trim();\r\n        if(text.length > 0) sendMessage(creds, chatId, {text});\r\n\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) =>{\r\n        sendMessage(creds, chatId, {files:event.target.files, text :\"\"})\r\n    }\r\n\r\n    return(\r\n        <form className = \"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className = \"message-input\"\r\n                placeholder =\"Send a message ....\"\r\n                value = {value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor = \"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\"/>\r\n                </span>\r\n            </label>\r\n            <input \r\n                type = \"file\"\r\n                multiple = {false}\r\n                id = \"upload-button\"\r\n                style = {{display:'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type =\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\"/>\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default MessageForm;","const TheirMessage = ({lastMessage, message}) =>{\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n\r\n    return(\r\n        <div className = \"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className = \"message-avatar\"\r\n                    style={{backgroundImage : `url(${message?.sender?.avatar})`}}\r\n                \r\n                />\r\n            )}\r\n\r\n            {message?.attachments?.length > 0\r\n            ? (\r\n                        <img \r\n                            src = {message.attachments[0].file}\r\n                            alt = \"message-attachment\"\r\n                            className = \"message-image\"\r\n                            style = {{marginLeft : isFirstMessageByUser ? '4px' : '48px'}}\r\n                        />\r\n            ) : (\r\n                <div className = \"message\" style ={{float:'left', backgroundColor:'#CABCDC', marginLeft : isFirstMessageByUser ? '4px' : '48px'}}>\r\n                    {message.text}\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","const MyMessage = ({message}) =>{\r\n    if(message?.attachments?.length > 0){\r\n        return(\r\n            <img \r\n                src = {message.attachments[0].file}\r\n                alt = \"message-attachment\"\r\n                className = \"message-image\"\r\n                style = {{float:'right'}}\r\n            />\r\n        )\r\n    }\r\n    return(\r\n        <div className = \"message\" style ={{float:'right', marginRight:'18px', color:'white', backgroundColor:'#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyMessage;","//import react from 'react'\r\nimport MessageForm from \"./MessageForm\";\r\nimport TheirMessage from \"./TheirMessage\";\r\nimport MyMessage from \"./MyMessage\";\r\n\r\nconst chatFeed = (props) =>{\r\n    //console.log(props);\r\n    const {chats, activeChat, userName, messages} = props;\r\n    const chat = chats && chats[activeChat];\r\n    //console.log(chat, userName,messages);\r\n\r\n    const renderReadReceipts = (message, isMyMessage) =>{\r\n        return chat.people.map((person,index) => person.last_read === message.id && (\r\n            <div\r\n                key = {`read_${index}`}\r\n                className = \"read-receipt\"\r\n                style = {{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage : `url(${person?.person?.avatar})` \r\n                }}\r\n\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () =>{\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key,index) =>{\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n                <div key = {`msg_${index}`} style = {{width : '100%'}}>\r\n                    <div className = \"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message = {message}/>\r\n                            : <TheirMessage message = {message} lastMessage = {messages[lastMessageKey]}/>\r\n                        }\r\n                        <div className = \"read-receipts\" style = {{marginRight : isMyMessage ? '18px' : '0px', marginLeft : isMyMessage ? '0px' : '68px'}}>\r\n                            {renderReadReceipts(message, isMyMessage)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n   //renderMessages()\r\n\r\n   if(!chat) return 'Loading....';\r\n\r\n    return(\r\n        <div className = \"chat-feed\">\r\n            <div className = \"chat-title-container\">\r\n                <div className = \"chat-title\">\r\n                    {chat.title}\r\n                </div>\r\n                <div className = \"chat-subtile\">\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style = {{height: '100px'}} />\r\n            <div className = \"message-form-container\">\r\n                <MessageForm {... props} chatId = {activeChat}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default chatFeed;","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst LoginForm = () =>{\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        const authObject = {\r\n            'Project-ID':\"ca545509-8573-4eaf-a438-dcafec633fd2\",\r\n            'User-Name' : username,\r\n            'User-Secret' : password\r\n        }\r\n\r\n        try{\r\n\r\n            await axios.get('https://api.chatengine.io/chats',{headers : authObject});\r\n            localStorage.setItem('username',username);\r\n            localStorage.setItem('password',password);\r\n\r\n            window.location.reload();\r\n\r\n        }catch(error){\r\n            setError('Incorrect Credentials')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className = \"wrapper\">\r\n            <div className = \"form\">\r\n                <h1 className = \"title\">Let's Catch Up</h1>\r\n                <form onSubmit = {handleSubmit}>\r\n                    <input type = \"text\" value = {username} onChange={(e) => setUsername(e.target.value)} className = \"input\" placeholder=\"Username\" required/>\r\n                    <input type = \"password\" value = {password} onChange={(e) => setPassword(e.target.value)} className = \"input\" placeholder=\"Password\" required/>    \r\n                    <div align = \"center\">\r\n                        <button type = \"submit\" className = \"button\">\r\n                            <span>\r\n                                Start Chatting\r\n                            </span>\r\n                        </button>\r\n                    </div> \r\n                    <h2 className = \"error\"> {error}</h2>   \r\n                \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default LoginForm;","import { ChatEngine } from 'react-chat-engine'\r\nimport ChatFeed from './components/ChatFeed'\r\nimport LoginForm from './components/LoginForm'\r\nimport './App.css'\r\n\r\nconst App = () =>{\r\n\r\n    if(!localStorage.getItem('username')) return <LoginForm/>\r\n\r\n\r\n    return(\r\n        <ChatEngine\r\n            height=\"100vh\"\r\n            projectID=\"ca545509-8573-4eaf-a438-dcafec633fd2\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            //renderChatFeed = \"Hello Vmasi\"\r\n            renderChatFeed = {\r\n                (chatAppFeed) =><ChatFeed {\r\n                    ... chatAppFeed\r\n                }\r\n                />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react'\r\nimport App from './App'\r\nimport ReactDOM from 'react-dom'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n"],"sourceRoot":""}